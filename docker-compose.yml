
volumes:
  dbdata:
  api_node_modules:
  web_node_modules:

services:
  db:
    image: postgres:16-alpine
    container_name: nwu-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nwupoll}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: nwu-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    image: node:20-bullseye-slim
    container_name: nwu-api
    user: root                     # <— allow apt-get
    working_dir: /app
    volumes:
      - ./apps/api:/app
      - api_node_modules:/app/node_modules
    command:
      - sh
      - -lc
      - |
        set -eu
        apt-get update -y
        apt-get install -y --no-install-recommends openssl libssl1.1
        node -v
        npm -v
        echo "ENV → PORT=$PORT  DATABASE_URL=$DATABASE_URL"
        npm install
        npx prisma generate
        npm run build
        npx prisma migrate dev --name=auto || true
        ls -la dist
        node dist/index.js

    environment:
      - PORT=8080
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-nwupoll}
      - REDIS_URL=redis://redis:6379
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    image: node:20-alpine
    container_name: nwu-web
    working_dir: /app
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
    command: sh -c "npm ci && npm run dev"
    environment:
      - VITE_API_BASE=/api
    ports:
      - "${WEB_PORT:-5173}:5173"
    depends_on:
      - api
